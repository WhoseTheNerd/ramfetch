#!/usr/bin/env bash
# MIT License
#
# Copyright (c) 2022 gentoo-btw
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:

# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

# colors
BLK='\e[0;30m'
RED='\e[0;31m'
GRN='\e[2;32m'
YEL='\e[0;33m'
BLU='\e[0;34m'
PURP='\e[0;35m'
CYN='\e[0;36m'
WHT='\e[0;37m'

while read -r; do
    case "${REPLY}" in
        (MemTotal:*)        memtotal="${REPLY//[^0-9]/}" ;;
        (MemFree:*)         memfree="${REPLY//[^0-9]/}" ;;
        (MemAvailable:*)    memavailable="${REPLY//[^0-9]/}" ;;
        (Buffers:*)         buffers="${REPLY//[^0-9]/}" ;;
        (Cached:*)          cached="${REPLY//[^0-9]/}" ;;
        (SwapTotal:*)       swaptotal="${REPLY//[^0-9]/}" ;;
        (SwapFree:*)        swapfree="${REPLY//[^0-9]/}" ;;
        (Zswap:*)           zswap="${REPLY//[^0-9]/}" ;;
        (Zswapped:*)        zswapped="${REPLY//[^0-9]/}" ;;
        (SwapCached:*)      swapcached="${REPLY//[^0-9]/} " ;;
        (Dirty:*)           dirty="${REPLY//[^0-9]/} " ;;
        (KernelStack:*)     kernel_stack="${REPLY//[^0-9]/} " ;;
        (Percpu:*)          per_cpu="${REPLY//[^0-9]/} " ;;
    esac
done < /proc/meminfo

# colorblocks/hostme
host_user="$(printf ${GRN}$USER${WHT}@${YEL}$HOSTNAME${WHT})"
colorblocks="$(printf ${WHITE}██${RED}██${GRN}██${BLU}██${YEL}██${PURP}██${CYN}██${BLK}██${WHT})"
# for ascii logo
yellowpart="$(printf ${YEL})"
greenpart="$(printf ${GRN})"
end="$(printf ${WHT})"

# Formatting to display commas (increases readability)
unit="kB"

for value in memtotal memfree memavailable buffers cached swaptotal swapfree zswap zswapped dirty kernel_stack per_cpu; 
do
	if [ -z "${!value}" ]; 
	then eval $value="null";
	else eval $value="$(numfmt --grouping --invalid='ignore' ${!value})";
	fi
done

# output
cat <<EOF

$greenpart   ████████████████████████████     $host_user
$greenpart ████████████████████████████████ $end   -------------
$greenpart ████      ████      ███      ███ $end  RAM Total: $(echo -e "\t\t") $memtotal $unit
$greenpart ████      ████      ███      ███ $end  RAM Free:  $(echo -e "\t\t") $memfree $unit
$greenpart ████      ████      ███      ███ $end  RAM Available: $(echo -e "\t") $memavailable $unit
$greenpart ████      ████      ███      ███ $end  Buffers: $(echo -e "\t\t") $buffers $unit
$greenpart ████████████████████████████████$end   Cached: $(echo -e "\t\t") $cached $unit
$greenpart ███   ████   █████   █████   ███$end   Swap Total: $(echo -e "\t") $swaptotal $unit
$yellowpart ███   ████   █████   █████   ███$end   Swap Free: $(echo -e "\t\t") $swapfree $unit
				    Zswap: $(echo -e "\t\t") $zswap $unit
                                    Zswapped: $(echo -e "\t\t") $zswapped $unit
                                    Swap Cached: $(echo -e "\t") $swapcached $unit
                                    Dirty: $(echo -e "\t\t") $dirty $unit
                                    Kernel Stack: $(echo -e "\t") $kernel_stack $unit
                                    Per CPU: $(echo -e "\t\t") $per_cpu $unit

                                    $colorblocks

EOF
