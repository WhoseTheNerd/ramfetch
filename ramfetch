#!/bin/sh
# MIT License
#
# Copyright (c) 2022 gentoo-btw
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:

# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

# colors
BLK='\e[0;30m'
RED='\e[0;31m'
GRN='\e[2;32m'
YEL='\e[0;33m'
BLU='\e[0;34m'
PURP='\e[0;35m'
CYN='\e[0;36m'
WHT='\e[0;37m'

# Sed input. Basically use regex to get the number + kB part and replace it itself to ensure the capture group is printed
# 's/[^0-9]*\([0-9]* kB\)/\1/'
# 's' - subsitution
# '/' - regex start
# '[^0-9]*' - match all except 0-9 zero or more times
# '\' - escape parenthesis
# '(' - capture group, everything inside will be saved as result of it
# '[0-9]* kB' match 0-9 zero or more times and kB must be end of it.
# '\' - escape parenthesis
# ')' - capture group close
# '/' subsitution end, replace start
# '\1' - everything from capture group
# '/' - end replace

while read -r REPLY; do
    case "${REPLY}" in
        (MemTotal:*)        memtotal=$(echo "$REPLY" | sed 's/[^0-9]*\([0-9]* kB\)/\1/' | numfmt --to=iec-i --suffix=B --format="%9.2f");;
        (MemFree:*)         memfree=$(echo "$REPLY" | sed 's/[^0-9]*\([0-9]* kB\)/\1/' | numfmt --to=iec-i --suffix=B --format="%9.2f") ;;
        (MemAvailable:*)    memavailable=$(echo "$REPLY" | sed 's/[^0-9]*\([0-9]* kB\)/\1/' | numfmt --to=iec-i --suffix=B --format="%9.2f") ;;
        (HugePages_Free:*)  hugepg_free=$(echo "$REPLY" | sed 's/[^0-9]*\([0-9]*\)/\1/' | numfmt --to=iec-i --suffix=B --format="%9.2f") ;;                                            
        (HugePages_Total:*) hugepg_total=$(echo "$REPLY" | sed 's/[^0-9]*\([0-9]*\)/\1/' | numfmt --to=iec-i --suffix=B --format="%9.2f") ;; 
        (Buffers:*)         buffers=$(echo "$REPLY" | sed 's/[^0-9]*\([0-9]* kB\)/\1/' | numfmt --to=iec-i --suffix=B --format="%9.2f") ;;
        (Cached:*)          cached=$(echo "$REPLY" | sed 's/[^0-9]*\([0-9]* kB\)/\1/' | numfmt --to=iec-i --suffix=B --format="%9.2f") ;;
        (SwapTotal:*)       swaptotal=$(echo "$REPLY" | sed 's/[^0-9]*\([0-9]* kB\)/\1/' | numfmt --to=iec-i --suffix=B --format="%9.2f") ;;
        (SwapFree:*)        swapfree=$(echo "$REPLY" | sed 's/[^0-9]*\([0-9]* kB\)/\1/' | numfmt --to=iec-i --suffix=B --format="%9.2f") ;;
        (Zswap:*)           zswap=$(echo "$REPLY" | sed 's/[^0-9]*\([0-9]* kB\)/\1/' | numfmt --to=iec-i --suffix=B --format="%9.2f") ;;
        (Zswapped:*)        zswapped=$(echo "$REPLY" | sed 's/[^0-9]*\([0-9]* kB\)/\1/' | numfmt --to=iec-i --suffix=B --format="%9.2f") ;;
        (SwapCached:*)      swapcached=$(echo "$REPLY" | sed 's/[^0-9]*\([0-9]* kB\)/\1/' | numfmt --to=iec-i --suffix=B --format="%9.2f") ;;
        (Dirty:*)           dirty=$(echo "$REPLY" | sed 's/[^0-9]*\([0-9]* kB\)/\1/' | numfmt --to=iec-i --suffix=B --format="%9.2f") ;;
        (KernelStack:*)     kernel_stack=$(echo "$REPLY" | sed 's/[^0-9]*\([0-9]* kB\)/\1/' | numfmt --to=iec-i --suffix=B --format="%9.2f") ;;
        (Percpu:*)          per_cpu=$(echo "$REPLY" | sed 's/[^0-9]*\([0-9]* kB\)/\1/' | numfmt --to=iec-i --suffix=B --format="%9.2f") ;;
    esac
done < /proc/meminfo

# colorblocks/hostme
HOSTNAME=$(hostname)
host_user="$(printf "%b%s%b%c%b%s%b" "${GRN}" "$USER" "${WHT}" "@" "${YEL}" "$HOSTNAME" "${WHT}")"
colorblocks="$(printf "%b%s%b%s%b%s%b%s%b%s%b%s%b%s%b%s%b" "${WHITE}" "██" "${RED}" "██" "${GRN}" "██" "${BLU}" "██" "${YEL}" "██" "${PURP}" "██" "${CYN}" "██" "${BLK}" "██" "${WHT}")"
# for ascii logo
yellowpart="$(printf "%b" "${YEL}")"
greenpart="$(printf "%b" "${GRN}")"
end="$(printf "%b" "${WHT}")"
# output
cat <<EOF

$greenpart   ████████████████████████████     $host_user
$greenpart ████████████████████████████████ $end   -------------
$greenpart ████      ████      ███      ███ $end  RAM Total: $(echo "\t\t") ${memtotal:-null}
$greenpart ████      ████      ███      ███ $end  RAM Free: $(echo "\t\t") ${memfree:-null}
$greenpart ████      ████      ███      ███ $end  RAM Available: $(echo "\t") ${memavailable:-null}
$greenpart ████      ████      ███      ███ $end  Buffers: $(echo "\t\t") ${buffers:-null}
$greenpart ████████████████████████████████$end   Cached: $(echo "\t\t") ${cached:-null}
$greenpart ███   ████   █████   █████   ███$end   Swap Total: $(echo "\t") ${swaptotal:-null}
$yellowpart ███   ████   █████   █████   ███$end   Swap Free:  $(echo "\t") ${swapfree:-null}
                                    Zswap: $(echo "\t\t") ${zswap:-null}
                                    Zswapped: $(echo "\t\t") ${zswapped:-null}
                                    Swap Cached: $(echo "\t") ${swapcached:-null}
                                    Dirty: $(echo "\t\t") ${dirty:-null}
                                    Kernel Stack: $(echo "\t") ${kernel_stack:-null}
                                    Per CPU: $(echo "\t\t") ${per_cpu:-null}
                                    HugePages Free: $(echo "\t") ${hugepg_free:-null}                                                                           
                                    HugePages Total: $(echo "\t") ${hugepg_total:-null}
                                    $colorblocks

EOF
